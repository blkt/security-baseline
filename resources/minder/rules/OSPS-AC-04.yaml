# SPDX-FileCopyrightText: Copyright 2024 The OSPS Baseline Authors
# SPDX-License-Identifier: Apache-2.0
---
# Derived from https://github.com/mindersec/minder-rules-and-profiles/blob/main/rule-types/github/branch_protection_allow_deletions.yaml
version: v1
release_phase: beta
type: rule-type
name: OSPS-AC-04
display_name: Prevent main branch deletion
short_failure_message: Default branch is not protected from being deleted
severity:
  value: medium
context:
  provider: github
description: Prevents the default branch from being deleted
guidance: |
  This rule implements checks for OSPS-AC-04, ensuring that users
  cannot delete the repository's main branch.
def:
  in_entity: repository

  # Defines the schema for parameters that will be passed to the rule
  param_schema:
    properties:
      branch:
        type: string
        description: "The name of the branch to check. If left empty, the default branch will be used."
        default: ""

  # Defines the schema for writing a rule with this rule being checked
  rule_schema:
    type: object
    properties: {}

  # Defines the configuration for ingesting data relevant for the rule
  ingest:
    type: rest
    rest:
      # This is the path to the data source. Given that this will evaluate
      # for each repository tracked by the project, we use a template that
      # will be evaluated for each repository. The structure to use is the
      # protobuf structure for the entity that is being evaluated.
      endpoint: '{{ $branch_param := index .Params "branch" }}/repos/{{.Entity.Owner}}/{{.Entity.Name}}/branches/{{if ne $branch_param "" }}{{ $branch_param }}{{ else }}{{ .Entity.DefaultBranch }}{{ end }}/protection'
      
      # This is the method to use to retrieve the data. It should already default to JSON
      parse: json
      fallback:
        - http_code: 404
          body: |
            {"http_status": 404, "message": "Not Protected"}

  # Defines the configuration for evaluating data ingested against the given policy
  eval:
    type: jq
    jq:
      - ingested:
          def: ".allow_deletions.enabled"
        constant: false

  # Defines the configuration for remediating the rule
  remediate:
    type: gh_branch_protection
    gh_branch_protection:
      patch: |
        {"allow_deletions": false }
